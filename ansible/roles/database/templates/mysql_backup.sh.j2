#!/bin/bash
# MySQL Backup Script
# Generated by Ansible

BACKUP_DIR="{{ mysql_backup_path }}"
RETENTION_DAYS="{{ mysql_backup_retention_days }}"
MYSQL_USER="root"
MYSQL_PASS="{{ mysql_root_password }}"
DATE=$(date +"%Y%m%d_%H%M%S")

# Create backup directory if it doesn't exist
mkdir -p "$BACKUP_DIR"

# Function to log messages
log_message() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" | tee -a "$BACKUP_DIR/backup.log"
}

log_message "Starting MySQL backup"

# Backup all databases
for db in $(mysql -u"$MYSQL_USER" -p"$MYSQL_PASS" -e "SHOW DATABASES;" | grep -Ev "(Database|information_schema|performance_schema|mysql|sys)"); do
    log_message "Backing up database: $db"
    
    mysqldump -u"$MYSQL_USER" -p"$MYSQL_PASS" \
        --single-transaction \
        --routines \
        --triggers \
        --events \
        --databases "$db" \
        > "$BACKUP_DIR/${db}_${DATE}.sql"
    
    if [ $? -eq 0 ]; then
        log_message "Successfully backed up $db"
        gzip "$BACKUP_DIR/${db}_${DATE}.sql"
    else
        log_message "Error backing up $db"
    fi
done

# Clean up old backups
log_message "Cleaning up backups older than $RETENTION_DAYS days"
find "$BACKUP_DIR" -name "*.sql.gz" -mtime +$RETENTION_DAYS -delete

log_message "Backup completed"
